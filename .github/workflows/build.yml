name: build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string

jobs:
  jlink:
    env:
      LINUX_JDK_URL:   'https://download.java.net/java/GA/jdk21.0.1/415e3f918a1f4062a0074a2794853d0d/12/GPL/openjdk-21.0.1_linux-x64_bin.tar.gz'
      MACOS_JDK_URL:   'https://download.java.net/java/GA/jdk21.0.1/415e3f918a1f4062a0074a2794853d0d/12/GPL/openjdk-21.0.1_macos-x64_bin.tar.gz'
      WINDOWS_JDK_URL: 'https://download.java.net/java/GA/jdk21.0.1/415e3f918a1f4062a0074a2794853d0d/12/GPL/openjdk-21.0.1_windows-x64_bin.zip'

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Download JDK Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: curl -L -o ${{ runner.temp }}/jdk.tar.gz ${{ env.LINUX_JDK_URL }}

      - name: Download JDK MacOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: curl -L -o ${{ runner.temp }}/jdk.tar.gz ${{ env.MACOS_JDK_URL }}

      - name: Download JDK Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: curl -L -o ${{ runner.temp }}/jdk.zip ${{ env.WINDOWS_JDK_URL }}

      - uses: actions/setup-java@v3
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/jdk.tar.gz
          java-version: '21'
          architecture: x64

      - uses: actions/setup-java@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/jdk.zip
          java-version: '21'
          architecture: x64

      - name: version
        run: mvn -B versions:set -DnewVersion="${{ inputs.version }}"

      - name: build
        run: mvn -B clean verify

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: target/*.zip

